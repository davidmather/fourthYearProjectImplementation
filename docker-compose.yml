version: '2'

services:
  janus-gateway:
    image: qxip/docker-janus
    container_name: janus-gateway
    volumes:
      - ./janus/janus/etc/janus/:/root/janus/etc/janus/
      - ./janus/janus/janus.log:/var/log/janus.log
    ports:
      - "8088:8088"
      - "8089:8089"
      - "8188:8188"
      - "7088:7088"
      - "7188:7188"
      - "7889:7889"
      - "10000-10200:10000-10200"
    expose:
      - "8088"
      - "8089"
      - "8188"
      - "7088"
      - "7188"
      - "7889"
      - "10000-10200"
    networks:
      - back-tier
      - front-tier

  apptest:
    image: "licode-image"
    container_name: "apptest"
    working_dir: /opt
    environment:
      - NODE_ENV=production
      - MIN_PORT=30000
      - MAX_PORT=30050
      - PUBLIC_IP=192.168.0.10
      - NETWORK_INTERFACE=eth0
    volumes:
      - ./licode/extras/basic_example:/opt/licode/extras/basic_example
    ports:
      # - "8080:8080"
      - "3000:3000"
      - "3001:3001"
      - "3004:3004"
      - "30000-30050:30000-30050/udp"
    expose:
      # - "8080"
      - "3000"
      - "3001"
      - "3004"
      - "30000-30050"

#  frontend:
#    image: "frontend"
#    user: "node"
#    container_name: "frontend"
#    working_dir: /home/node/app
#    environment:
#      - NODE_ENV=production
#    volumes:
#      - ./frontend:/home/node/app
#    ports:
#      - "8443:8443"
#    expose:
#      - "8443"
#    command: "npm start"

  # The Node.js login api
  login:
    image: "node:10"
    user: "node"
    container_name: login
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
      - GRPC_SERVER=grpcaccountsservice:5001
    volumes:
      - ./login:/home/node/app
    ports:
      - "16001:16001"
    expose:
      - "16001"
    command: "npm start"
    depends_on:
      - dbMysql
      - grpcaccountsservice

  # GRPC accounts service
  grpcaccountsservice:
    image: "node:10"
    user: "node"
    container_name: "grpcaccountsservice"
    hostname: "grpcaccountsservice"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
      - MYSQL_HOST=dbMysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=changeme
      - MYSQL_DATABASE=Microservices3
    volumes:
      - ./accountsService:/home/node/app
    ports:
      - "5001:5001"
    expose:
      - "5001"
    command: "npm start"
    depends_on:
      - dbMysql

  # The mysql database
  dbMysql:
    image: mysql:8.0.3
    restart: always
    container_name: dbMysql
    hostname: dbMysql
    volumes:
      - ./database/data/mysql/database:/var/lib/mysql
      - ./database/data/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: changeme
      MYSQL_ROOT_USER: root
      MYSQL_DATABASE: Microservices3
      MYSQL_USER: Admin
      MYSQL_PASSWORD: changeme

  # The mysql database administration dashboard
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - dbMysql

networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge

